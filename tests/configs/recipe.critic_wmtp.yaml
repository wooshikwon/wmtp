# M3 Test Recipe - Critic WMTP Algorithm
# Value function based dynamic weighting for Multi-Token Prediction

# Run metadata
run:
  name: "m3_test_critic_wmtp"
  tags:
    - "test"
    - "m3"
    - "critic"
    - "wmtp"

# Data configuration
data:
  train:
    sources: ["mbpp"]
    max_length: 128
    batch_size: 1
    pack_sequences: false
  eval:
    sources: ["mbpp"]
    max_length: 128
    batch_size: 1
    pack_sequences: false

# Pretraining configuration (Stage 1)
pretrain:
  enabled: true
  num_epochs: 3
  max_steps: 30
  lr: 1e-4
  save_value_head: true

  early_stopping:
    enabled: true
    mode: "loss_only"  # 테스트 환경: loss만 체크
    patience: 10
    min_delta: 1e-4
    monitor: "value_loss"
    # Gradient/variance 체크는 production 환경에서만 사용
    # 테스트 환경에서는 초기 variance가 매우 작아 즉시 중단될 수 있음

# Training configuration (Stage 2)
train:
  algo: "critic-wmtp"
  full_finetune: true
  max_steps: 10

  early_stopping:
    enabled: false
    patience: 100
    min_delta: 1e-5
    monitor: "wmtp_loss"

# Optimizer configuration
optim:
  optimizer: "adamw"
  lr: 5.0e-5
  weight_decay: 0.01
  betas: [0.9, 0.999]
  grad_clip: 1.0
  scheduler: "constant"
  warmup_ratio: 0.0

# Loss configuration - critic settings
loss:
  weight_norm: "mean1.0_clip"
  lambda: 0.3
  weight_temperature: 0.7
  epsilon: 0.05
  max_weight: 3.0

# Critic-specific configuration
critic:
  target: "rm_sequence"
  token_spread: "gae"
  delta_mode: "td"
  normalize: "zscore"
  discount_lambda: 0.95
  gamma: 0.99
  gae_lambda: 0.95
  auxiliary_loss_coef: 0.1
  value_lr: 5e-5
  use_pseudo_rewards: true

# Evaluation configuration
eval:
  protocol: "meta-mtp"
  sampling:
    temperature: 0.7
    top_p: 0.9
    n: 1
  metrics:
    - "mbpp_exact"
