# Production Recipe - Critic WMTP Algorithm
# Value function delta-based dynamic weighting on A100x2

# Run metadata
run:
  name: "prod_critic_wmtp"
  tags:
    - "production"
    - "vessl"
    - "critic"
    - "wmtp"
    - "a100"
    - "value-function"

# Data configuration
data:
  train:
    sources: ["mbpp", "contest"]
    max_length: 2048
    batch_size: 4  # Per GPU: 4 x 2 = 8 total
    pack_sequences: true
    num_workers: 8
  eval:
    sources: ["mbpp", "humaneval"]
    max_length: 2048
    batch_size: 4
    pack_sequences: false
    num_workers: 4

# Training configuration
train:
  algo: "critic-wmtp"  # Value function delta-based weighting
  full_finetune: true
  max_steps: 10000
  eval_interval: 500
  save_interval: 1000
  # checkpointing moved to config.paths.checkpoints in Phase 2

# Optimizer configuration
optim:
  optimizer: "adamw"
  lr: 2.0e-5
  weight_decay: 0.01
  betas: [0.9, 0.999]
  grad_clip: 1.0
  scheduler: "cosine"
  warmup_ratio: 0.03

# Loss configuration (Phase 2.2: lambda not used in critic-wmtp)
loss:
  weight_norm: "mean1.0_clip"
  lambda: 0.3  # Not used in critic-wmtp (main loss always 1.0)
  weight_temperature: 0.7  # Weight softmax temperature
  epsilon: 0.05
  max_weight: 3.0

# Critic-specific configuration (Phase 2: fully parameterized)
critic:
  discount_lambda: 0.95  # Short-term discount for delta computation
  gamma: 0.99           # Long-term reward discount
  gae_lambda: 0.95      # GAE lambda parameter
  auxiliary_loss_coef: 0.1  # Value head auxiliary loss coefficient
  target: "rm_sequence"
  token_spread: "gae"
  delta_mode: "td"
  normalize: "zscore"
  value_lr: 5.0e-5
  use_pseudo_rewards: true

# Evaluation configuration
eval:
  protocol: "meta-mtp"
  sampling:
    temperature: 0.7
    top_p: 0.9
    n: 20  # For pass@k evaluation
  metrics:
    - "mbpp_exact"
    - "humaneval_exact"
    - "contest_exact"